@page "/DetailsMetas"
@page "/DetailsMetas/metaId={metaId:int}"
@inject MetasService metasService
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject NavigationManager navigation

<PageTitle>Detalle de Meta</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header">
			<h3><strong>Detalle de Meta</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			@*Datos*@
			<div class="mb-1">
				<p class="mb-0">Meta Id: @meta.MetaId</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Fecha: @meta.Fecha</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Descripci&oacute;n: @meta.Descripcion</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Monto: @meta.Monto</p>
			</div>
		</div>
		@*Footer*@
		<div class="card-footer d-flex justify-content-center">
			<button type="button" class="btn btn-outline-primary" @onclick="Volver"><i class="bi bi-box-arrow-left" /> Volver</button>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public int metaId { get; set; }
	public Metas meta { get; set; } = new Metas();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		if (metaId > 0)
			meta = await metasService.Buscar(metaId);
	}


	public void Volver()
	{
		navigation.NavigateTo("/Metas");
	}
	public void IrAEditar(int id)
	{
		navigation.NavigateTo($"/EditMetas/metaid={id}");
	}
	public void IrAEliminar(int id)
	{
		navigation.NavigateTo($"/DeleteMetas/metaid={id}");
	}
}
